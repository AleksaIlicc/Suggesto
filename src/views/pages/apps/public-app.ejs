<!doctype html>
<html lang="en">
  <head>
    <title><%= app.name %> - Suggesto</title>
    <%- include('../../shared/includes/meta') %> 
    <%- include('../../shared/includes/styles') %>
  </head>
  <body class="bg-background">
    <div class="flex min-h-screen flex-col items-center">
      <%- include('../../shared/partials/header') %>
      
      <div id="appHeader" class="w-full flex justify-center p-6 shadow-sm sm:px-28 sm:py-14">
        <div class="flex w-full max-w-6xl flex-col justify-center space-y-3">
          <div class="flex items-center space-x-4">
            <div class="flex h-12 w-12 items-center justify-center rounded-full bg-white">
              <span class="text-lg font-medium text-black"><%= app.name.charAt(0) %></span>
            </div>
            <div>
              <h1 class="text-xl font-medium text-white sm:text-2xl"><%= app.name %></h1>
              <p class="text-sm text-gray-200">by <%= app.user.firstName %> <%= app.user.lastName %></p>
            </div>
          </div>
          <p class="max-w-2xl text-sm text-gray-100 sm:text-base"><%= app.description %></p>
        </div>
      </div>

      <main class="flex w-full max-w-6xl grow flex-col justify-stretch px-4 py-4 sm:py-8 lg:px-28">
        <div class="mb-6 w-full">
          <a href="/apps/browse/<%= app._id %>/suggest" 
             class="bg-gray-dark hover:bg-gray-light inline-block cursor-pointer rounded-xl px-6 py-3 text-base text-white transition-colors">
            Submit Feature Request
          </a>
        </div>

        <div class="w-full space-y-4">
          <% if (suggestions && suggestions.length > 0) { %>
            <% suggestions.forEach(suggestion => { %>
            <div class="rounded-xl bg-white p-4 shadow-sm sm:p-6 transition-all hover:shadow-md">
              <div class="mb-3 flex flex-wrap items-center gap-2">
                <% if (suggestion.status) { %>
                  <% 
                  let statusColor = 'bg-gray-100 text-gray-800';
                  let statusText = suggestion.status;
                  switch(suggestion.status) {
                    case 'pending': 
                      statusColor = 'bg-yellow-100 text-yellow-800';
                      statusText = 'Pending';
                      break;
                    case 'in-progress': 
                      statusColor = 'bg-blue-100 text-blue-800';
                      statusText = 'In Progress';
                      break;
                    case 'completed': 
                      statusColor = 'bg-green-100 text-green-800';
                      statusText = 'Completed';
                      break;
                    case 'rejected': 
                      statusColor = 'bg-red-100 text-red-800';
                      statusText = 'Rejected';
                      break;
                  }
                  %>
                  <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium <%= statusColor %>">
                    <%= statusText %>
                  </span>
                <% } %>
                <span class="text-xs text-gray-500">
                  <% if (suggestion.userId) { %>
                    by <%= suggestion.userId.firstName %> <%= suggestion.userId.lastName %> • 
                  <% } else { %>
                    by Anonymous • 
                  <% } %>
                  <%= moment(suggestion.createdAt).format('MMM DD, YYYY') %>
                </span>
              </div>
              
              <div class="flex flex-col space-y-3 space-x-0 sm:flex-row sm:items-start sm:justify-between sm:space-y-0 sm:space-x-4">
                <div class="flex-1">
                  <h3 class="text-base font-semibold text-gray-dark sm:text-lg mb-2">
                    <%= suggestion.title %>
                  </h3>
                  <p class="text-sm text-gray-600 sm:text-base mb-3 leading-relaxed">
                    <%= suggestion.description %>
                  </p>
                  
                  <!-- Files Display -->
                  <% if (suggestion.files && suggestion.files.length > 0) { %>
                    <div class="mb-3">
                      <p class="text-xs text-gray-500 mb-2">Attachments:</p>
                      <div class="flex flex-wrap gap-2">
                        <% suggestion.files.forEach(file => { %>
                          <a href="/uploads/<%= file.filename %>" 
                             target="_blank"
                             class="text-xs bg-gray-100 hover:bg-gray-200 px-2 py-1 rounded transition-colors">
                            <%= file.originalName %>
                          </a>
                        <% }) %>
                      </div>
                    </div>
                  <% } %>
                </div>
                
                <div class="flex items-center justify-end space-x-3">
                  <!-- Status Update (Only for app owner) -->
                  <% if (isOwner) { %>
                    <div class="relative">
                      <select 
                        onchange="updateStatus('<%= suggestion._id %>', this.value)"
                        class="text-sm border rounded-md px-2 py-1 bg-white">
                        <option value="pending" <%= suggestion.status === 'pending' ? 'selected' : '' %>>Pending</option>
                        <option value="in-progress" <%= suggestion.status === 'in-progress' ? 'selected' : '' %>>In Progress</option>
                        <option value="completed" <%= suggestion.status === 'completed' ? 'selected' : '' %>>Completed</option>
                        <option value="rejected" <%= suggestion.status === 'rejected' ? 'selected' : '' %>>Rejected</option>
                      </select>
                    </div>
                  <% } %>
                  
                  <!-- Vote Button -->
                  <div class="flex items-center space-x-2">
                    <button onclick="toggleVote('<%= suggestion._id %>')"
                            id="vote-btn-<%= suggestion._id %>"
                            class="flex cursor-pointer items-center space-x-2 rounded-lg p-2 transition-all hover:bg-gray-100 active:scale-95 <%= suggestion.hasUserVoted ? 'bg-red1 text-white' : 'bg-gray-50' %>">
                      <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 sm:h-6 sm:w-6" 
                           fill="<%= suggestion.hasUserVoted ? 'currentColor' : 'none' %>" 
                           viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 15l7-7 7 7" />
                      </svg>
                      <p class="text-sm font-medium sm:text-base" id="vote-count-<%= suggestion._id %>">
                        <%= suggestion.voteCount || 0 %>
                      </p>
                    </button>
                  </div>
                </div>
              </div>
            </div>
            <% }) %>
          <% } else { %>
            <div class="text-center py-16 bg-white rounded-xl">
              <div class="mx-auto mb-4 h-16 w-16 rounded-full bg-gray-100 flex items-center justify-center">
                <svg class="w-8 h-8 text-gray-400" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M11.3 1.046A1 1 0 0112 2v5h4a1 1 0 01.82 1.573l-7 10A1 1 0 018 18v-5H4a1 1 0 01-.82-1.573l7-10a1 1 0 011.12-.38z" clip-rule="evenodd"></path>
                </svg>
              </div>
              <h3 class="text-lg font-medium text-gray-dark mb-2">No Feature Requests Yet</h3>
              <p class="text-gray-600 mb-6">Be the first to suggest a feature for this app!</p>
              <a href="/apps/browse/<%= app._id %>/suggest" 
                 class="bg-gray-dark hover:bg-gray-light inline-block rounded-lg px-6 py-3 text-white transition-colors">
                Submit First Request
              </a>
            </div>
          <% } %>
        </div>
      </main>
    </div>
    
    <%- include('../../shared/includes/scripts') %>
    <script>
      // Set dynamic colors from app design
      document.addEventListener('DOMContentLoaded', function() {
        const headerColor = '<%= app.design?.headerColor || "#374151" %>';
        const buttonColor = '<%= app.design?.buttonColor || "#111827" %>';
        const backgroundColor = '<%= app.design?.backgroundColor || "#F3F4F6" %>';
        
        document.getElementById('appHeader').style.backgroundColor = headerColor;
        const addBtn = document.querySelector('a[href*="suggest"]');
        if (addBtn) {
          addBtn.style.backgroundColor = buttonColor;
        }
        document.body.style.backgroundColor = backgroundColor;
      });

      // Voting functionality
      async function toggleVote(suggestionId) {
        try {
          const response = await fetch(`/apps/api/suggestions/${suggestionId}/vote`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
          });

          const data = await response.json();

          if (data.success) {
            const voteBtn = document.getElementById(`vote-btn-${suggestionId}`);
            const voteCount = document.getElementById(`vote-count-${suggestionId}`);
            
            // Update vote count
            voteCount.textContent = data.voteCount;
            
            // Update button appearance
            if (data.voted) {
              voteBtn.classList.remove('bg-gray-50');
              voteBtn.classList.add('bg-red1', 'text-white');
              voteBtn.querySelector('svg').setAttribute('fill', 'currentColor');
            } else {
              voteBtn.classList.remove('bg-red1', 'text-white');
              voteBtn.classList.add('bg-gray-50');
              voteBtn.querySelector('svg').setAttribute('fill', 'none');
            }
          } else {
            alert(data.message || 'Failed to process vote');
          }
        } catch (error) {
          console.error('Error voting:', error);
          alert('Failed to process vote. Please try again.');
        }
      }

      // Status update functionality (for app owners)
      async function updateStatus(suggestionId, newStatus) {
        try {
          const response = await fetch(`/apps/api/suggestions/${suggestionId}/status`, {
            method: 'PUT',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({ status: newStatus })
          });

          if (response.ok) {
            // Reload the page to show updated status
            window.location.reload();
          } else {
            alert('Failed to update status. Please try again.');
          }
        } catch (error) {
          console.error('Error updating status:', error);
          alert('Failed to update status. Please try again.');
        }
      }
    </script>
  </body>
</html>
