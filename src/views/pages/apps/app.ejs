<!doctype html>
<html lang="en">
  <head>
    <title><%= app.name %> - Suggesto</title>
    <%- include('../../shared/includes/meta') %> <%-
    include('../../shared/includes/styles') %>
  </head>
  <body id="pageBody" class="bg-background">
    <% if (isOwner) { %>
    <div class="fixed right-8 bottom-8">
      <a
        href="/apps"
        class="flex h-14 w-14 items-center justify-center rounded-full bg-white shadow-md">
        <i class="fas fa-th text-gray-dark text-xl"></i>
      </a>
    </div>
    <% } %>
    <div
      id="appHeader"
      class="flex justify-center p-6 shadow-sm sm:px-28 sm:py-14">
      <div class="flex w-full max-w-xl flex-col justify-center space-y-3">
        <div class="flex items-center space-x-4">
          <div
            class="flex h-10 w-10 items-center justify-center rounded-full bg-white">
            <% if (app.design && app.design.logo) { %>
            <img
              src="<%= app.design.logo %>"
              alt="<%= app.name %>"
              class="h-full w-full rounded-full object-cover" />
            <% } else { %>
            <span class="text-lg font-medium text-black"
              ><%= app.name.charAt(0) %></span
            >
            <% } %>
          </div>
          <h1 class="text-lg font-medium text-white sm:text-xl">
            <%= app.name %>
          </h1>
        </div>

        <p class="max-w-2xl text-sm text-gray-100 sm:text-base">
          <%= app.description %>
        </p>
      </div>
    </div>

    <main class="mx-auto flex justify-center p-6 sm:px-28 sm:py-8">
      <div class="w-full max-w-xl">
        <div class="mb-4 w-full sm:mb-8">
          <div class="flex flex-col space-y-3 sm:flex-row sm:space-x-3 sm:space-y-0">
            <button
              id="addSuggestionBtn"
              onclick="window.location.href = '<%= app._id %>/add-suggestion'"
              class="cursor-pointer rounded-xl px-6 py-3 text-base text-white transition-all hover:opacity-90 active:scale-95">
              Add Suggestion
            </button>
            <% if (app.enablePublicRoadmap) { %>
            <button
              id="viewRoadmapBtn"
              onclick="window.location.href = '/apps/<%= app._id %>/roadmap'"
              class="cursor-pointer rounded-xl px-6 py-3 text-base text-white transition-all hover:opacity-90 active:scale-95">
              View Roadmap
            </button>
            <% } %>
          </div>
        </div>

        <!-- Suggestions Header with Dropdown -->
        <div class="mb-6 flex items-center justify-between">
          <h2 class="text-xl font-semibold flex items-center" <% /* eslint-disable css-propertyvalueexpected */ %> style="color: <%= app.design?.suggestionsHeaderColor || '#111827' %>">
            Showing 
            <select 
              id="sortDropdown"
              onchange="changeSorting(this.value)"
              class="mx-2 px-3 py-1 rounded-md border-b border-gray-300 text-xl font-semibold cursor-pointer focus:outline-none"
              <% /* eslint-disable css-propertyvalueexpected */ %> style="color: <%= app.design?.suggestionsHeaderColor %>; background-color: <%= app.design?.backgroundColor || '#F3F4F6' %>;">
              <option value="top" <%= currentSort === 'top' || !currentSort ? 'selected' : '' %>>Top</option>
              <option value="trending" <%= currentSort === 'trending' ? 'selected' : '' %>>Trending</option>
              <option value="new" <%= currentSort === 'new' ? 'selected' : '' %>>New</option>
            </select>
            suggestions
          </h2>
        </div>

        <div class="w-full space-y-4">
          <% if (suggestions && suggestions.length > 0) { %> <%
          suggestions.forEach(suggestion => { %>
          <div class="rounded-xl p-4 shadow-sm sm:p-6" <% /* eslint-disable css-propertyvalueexpected */ %> style="background-color: <%= app.design?.suggestionCardBgColor || '#FFFFFF' %>">
            <div class="mb-3 flex flex-wrap items-center gap-2">
              <!-- Category Badge -->
              <% if (suggestion.category) { %>
                <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium text-white" 
                 <% /* eslint-disable css-propertyvalueexpected */ %> style="background-color: <%= suggestion.category.color %>">
                  <%= suggestion.category.name.charAt(0).toUpperCase() + suggestion.category.name.slice(1) %>
                </span>
              <% } %>
              
              <span class="text-xs" <% /* eslint-disable css-propertyvalueexpected */ %> style="color: <%= app.design?.suggestionMetaColor || '#6B7280' %>">
                by <%= suggestion.userId ? `${suggestion.userId.firstName} ${suggestion.userId.lastName}` : 'Anonymous User' %> â€¢ 
                <%= moment(suggestion.createdAt).format('MMM DD, YYYY') %>
              </span>
            </div>
            
            <div
              class="flex flex-col space-y-2 space-x-0 sm:flex-row sm:items-start sm:justify-between sm:space-y-0 sm:space-x-4">
              <div class="flex-1">
                <h3 class="text-base font-medium sm:text-lg mb-2" <% /* eslint-disable css-propertyvalueexpected */ %> style="color: <%= app.design?.suggestionTextColor || '#374151' %>">
                  <%= suggestion.title %>
                </h3>
                <p class="text-sm sm:text-base mb-3" <% /* eslint-disable css-propertyvalueexpected */ %> style="color: <%= app.design?.suggestionTextColor || '#374151' %>">
                  <%= suggestion.description %>
                </p>
                
                <!-- Files Display -->
                <% if (suggestion.files && suggestion.files.length > 0) { %>
                  <div class="mb-3">
                    <h4 class="text-sm font-medium text-gray-700 mb-2">Attachments:</h4>
                    <div class="flex flex-wrap gap-2">
                      <% suggestion.files.forEach(file => { %>
                        <a href="/uploads/<%= file.filename %>" target="_blank" 
                           class="inline-flex items-center px-3 py-1 rounded-md bg-gray-100 text-sm text-gray-700 hover:bg-gray-200">
                          <% if (file.mimetype.startsWith('image/')) { %>
                            <i class="fas fa-image mr-1"></i>
                          <% } else if (file.mimetype === 'application/pdf') { %>
                            <i class="fas fa-file-pdf mr-1"></i>
                          <% } else { %>
                            <i class="fas fa-file mr-1"></i>
                          <% } %>
                          <%= file.originalName %>
                        </a>
                      <% }); %>
                    </div>
                  </div>
                <% } %>
              </div>
              
              <div class="flex items-center justify-end space-x-3">
                <!-- Vote Button -->
                <div class="flex items-center space-x-2">
                  <button
                    onclick="toggleVote('<%= suggestion._id %>')"
                    id="vote-btn-<%= suggestion._id %>"
                    class="flex items-center cursor-pointer space-x-2 rounded-lg p-2 transition-all hover:opacity-90 active:scale-95"
                    <% /* eslint-disable css-propertyvalueexpected */ %> style="background-color: <%= suggestion.hasUserVoted ? (app.design?.voteButtonActiveBgColor || '#DBEAFE') : (app.design?.voteButtonBgColor || '#E5E7EB') %>; color: <%= suggestion.hasUserVoted ? (app.design?.voteButtonActiveTextColor || '#2563EB') : (app.design?.voteButtonTextColor || '#374151') %>">
                    <i class="fas fa-chevron-up text-md"></i>
                    <p class="text-sm font-medium sm:text-base" id="vote-count-<%= suggestion._id %>"
                       <% /* eslint-disable css-propertyvalueexpected */ %> style="color: <%= suggestion.hasUserVoted ? (app.design?.voteButtonActiveTextColor || '#2563EB') : (app.design?.voteButtonTextColor || '#374151') %>">
                      <%= suggestion.voteCount || 0 %>
                    </p>
                  </button>
                </div>
              </div>
            </div>
          </div>
          <% }) %> <% } else { %>
          <div class="text-center text-gray-500 py-8">
            <p class="text-lg mb-2">No suggestions yet</p>
            <p class="text-sm">Be the first to suggest something!</p>
          </div>
          <% } %>
        </div>
      </div>
    </main>

    <%- include('../../shared/includes/scripts') %>
    <script>
      document.addEventListener('DOMContentLoaded', function () {
        const headerColor = '<%= app.design?.headerColor || "#374151" %>';
        const headerTextColor = '<%= app.design?.headerTextColor || "#FFFFFF" %>';
        const buttonColor = '<%= app.design?.buttonColor || "#111827" %>';
        const buttonTextColor = '<%= app.design?.buttonTextColor || "#FFFFFF" %>';
        const backButtonColor = '<%= app.design?.backButtonColor || "#6B7280" %>';
        const backgroundColor = '<%= app.design?.backgroundColor || "#F3F4F6" %>';

        // Helper function for safe style application
        const safeApplyStyle = (element, property, value) => {
          if (element && value) {
            element.style[property] = value;
          }
        };

        // Apply header styles
        const header = document.getElementById('appHeader');
        safeApplyStyle(header, 'backgroundColor', headerColor);
        
        // Apply header text colors
        const headerTitle = header ? header.querySelector('h1') : null;
        const headerDescription = header ? header.querySelector('p') : null;
        safeApplyStyle(headerTitle, 'color', headerTextColor);
        safeApplyStyle(headerDescription, 'color', headerTextColor);

        // Apply button styles
        const addButton = document.getElementById('addSuggestionBtn');
        safeApplyStyle(addButton, 'backgroundColor', buttonColor);
        safeApplyStyle(addButton, 'color', buttonTextColor);

        // Style View Roadmap button with same colors
        const roadmapButton = document.getElementById('viewRoadmapBtn');
        safeApplyStyle(roadmapButton, 'backgroundColor', buttonColor);
        safeApplyStyle(roadmapButton, 'color', buttonTextColor);

        // Apply background colors
        const mainElement = document.querySelector('main');
        safeApplyStyle(mainElement, 'backgroundColor', backgroundColor);

        // Set body background to custom color
        const bodyElement = document.getElementById('pageBody');
        safeApplyStyle(bodyElement, 'backgroundColor', backgroundColor);        
      });

      // Dropdown sorting function
      function changeSorting(sortValue) {
        window.location.href = '/apps/<%= app._id %>?sort=' + sortValue;
      }

      // Voting functionality
      async function toggleVote(suggestionId) {
        try {
          const response = await fetch(`/apps/api/suggestions/${suggestionId}/vote`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
          });

          const data = await response.json();

          if (data.success) {
            const voteBtn = document.getElementById(`vote-btn-${suggestionId}`);
            const voteCount = document.getElementById(`vote-count-${suggestionId}`);
            
            // Update vote count
            if (voteCount) {
              voteCount.textContent = data.voteCount;
            }
            
            // Get design colors
            const voteButtonBgColor = '<%= app.design?.voteButtonBgColor || "#E5E7EB" %>';
            const voteButtonTextColor = '<%= app.design?.voteButtonTextColor || "#374151" %>';
            const voteButtonActiveBgColor = '<%= app.design?.voteButtonActiveBgColor || "#DBEAFE" %>';
            const voteButtonActiveTextColor = '<%= app.design?.voteButtonActiveTextColor || "#2563EB" %>';
            
            // Update button appearance with custom colors
            if (voteBtn) {
              if (data.voted) {
                voteBtn.style.backgroundColor = voteButtonActiveBgColor;
                voteBtn.style.color = voteButtonActiveTextColor;
              } else {
                voteBtn.style.backgroundColor = voteButtonBgColor;
                voteBtn.style.color = voteButtonTextColor;
              }
            }
            
            // Update vote count color
            if (voteCount) {
              if (data.voted) {
                voteCount.style.color = voteButtonActiveTextColor;
              } else {
                voteCount.style.color = voteButtonTextColor;
              }
            }
          } else {
            alert(data.message || 'Failed to process vote');
          }
        } catch (error) {
          console.error('Error voting:', error);
          alert('Failed to process vote. Please try again.');
        }
      }
    </script>
  </body>
</html>
